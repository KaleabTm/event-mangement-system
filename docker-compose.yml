services:
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - ems_network
    depends_on:
      - django
      - next
      - postgres

  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - ems_network

  django:
    build:
      context: ./backend
      dockerfile: docker/development/Dockerfile
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: on-failure
    networks:
      - ems_network

  next:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    command: "node server.js"
    environment:
      - PORT=3000
      - NODE_ENV=production
      - NEXT_PUBLIC_ENABLE_REACT_QUERY_DEV_TOOLS=false
      - DJANGO_API_BASE_URL=http://django:8000/api/
      - SESSION_NAME=EMS
    ports:
      - "3000:3000"
    depends_on:
      - django
    networks:
      - ems_network
volumes:
  postgres_data:

networks:
  ems_network: